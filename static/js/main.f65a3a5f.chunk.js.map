{"version":3,"sources":["information/apiInfo.js","components/Searchbar.js","components/ImageGalleryItem.js","components/ImageGallery.js","components/Button.js","components/Loader.js","components/Modal.js","App.js","index.js"],"names":["fetchImages","searchItem","page","a","fetch","rawResult","ok","json","result","Searchbar","onSubmit","useState","value","setValue","className","event","preventDefault","trim","toast","error","type","autoComplete","autoFocus","placeholder","onChange","e","target","ImageGalleryItem","webformatURL","showImageHandle","src","alt","onClick","ImageGallery","images","showImageHandler","map","image","index","largeImageURL","id","Button","loadMoreHandler","propType","img","PropTypes","string","isRequired","func","Loader","color","height","width","modalRoot","document","querySelector","Modal","largeImgURL","onClose","useEffect","window","addEventListener","keyDownHandler","removeEventListener","code","createPortal","currentTarget","maxPages","App","setImages","setSearchItem","setPage","isLoading","setIsLoading","openModal","setOpenModal","setError","prevState","searchImagesHandler","scrollToHandler","top","documentElement","scrollHeight","setTimeout","scrollTo","behavior","total","Math","ceil","totalHits","hits","info","console","toString","searchString","imageUrl","length","min","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f65a3a5f.chunk.js","sourcesContent":["const BASE_URL = 'https://pixabay.com/api/';\r\nconst API_KEY = '11753469-fae5ae7c0c549b8c5c7373ba2';\r\n\r\nconst fetchImages = async (searchItem, page) => {\r\n  const rawResult = await fetch(\r\n    `${BASE_URL}?q=${searchItem}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  );\r\n\r\n  if (!rawResult.ok) {\r\n    throw rawResult;\r\n  }\r\n\r\n  const result = await rawResult.json();\r\n\r\n  return result;\r\n};\r\n\r\nexport default fetchImages;\r\n","import { toast } from 'react-toastify';\r\nimport { useState } from 'react';\r\n\r\nfunction Searchbar({ onSubmit }) {\r\n  const [value, setValue] = useState('');\r\n\r\n  const changeHandler = e => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const submitHandler = event => {\r\n    event.preventDefault();\r\n\r\n    if (value.trim() === '') {\r\n      toast.error('Please enter search request!');\r\n      return;\r\n    }\r\n    onSubmit(value);\r\n    setValue('');\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={submitHandler}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={changeHandler}\r\n          value={value}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Searchbar;\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function ImageGalleryItem({ webformatURL, showImageHandle }) {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        src={webformatURL}\r\n        alt=\"\"\r\n        className=\"ImageGalleryItem-image\"\r\n        onClick={showImageHandle}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propType = {\r\n  img: PropTypes.string.isRequired,\r\n  showImageHandle: PropTypes.func.isRequired,\r\n};\r\n","import ImageGalleryItem from './ImageGalleryItem';\r\n\r\nexport default function ImageGallery({ images, showImageHandler }) {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map((image, index) => {\r\n        return (\r\n          <ImageGalleryItem\r\n            key={image.id}\r\n            webformatURL={image.webformatURL}\r\n            showImageHandle={showImageHandler(image.largeImageURL)}\r\n            index={index}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function Button({ loadMoreHandler }) {\r\n  return (\r\n    <button type=\"button\" className=\"Button\" onClick={loadMoreHandler}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propType = {\r\n  loadMoreHandler: PropTypes.func.isRequired,\r\n};\r\n","import Spinner from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"Loader\">\r\n      <Spinner type=\"ThreeDots\" color=\"#00BFFF\" height={150} width={150} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst modalRoot = document.querySelector('#modalRoot');\r\n\r\nfunction Modal({ largeImgURL, onClose }) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', keyDownHandler);\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.removeEventListener('keydown', keyDownHandler);\r\n  });\r\n\r\n  const keyDownHandler = e => {\r\n    if (e.code === 'Escape') {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const overlayClickHandler = event => {\r\n    if (event.currentTarget === event.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className=\"Overlay\" onClick={overlayClickHandler}>\r\n      <div className=\"Modal\">\r\n        <img src={largeImgURL} alt=\"\" />\r\n      </div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { toast } from 'react-toastify';\r\nimport { useState, useEffect } from 'react';\r\nimport fetchImages from './information/apiInfo';\r\nimport Searchbar from './components/Searchbar';\r\nimport ImageGallery from './components/ImageGallery';\r\nimport Button from './components/Button';\r\nimport Loader from './components/Loader';\r\nimport Modal from './components/Modal';\r\n\r\nlet maxPages = 0;\r\nlet largeImgURL = '';\r\n\r\nfunction App() {\r\n  const [images, setImages] = useState([]);\r\n  const [searchItem, setSearchItem] = useState('');\r\n  const [page, setPage] = useState(1);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(\r\n    prevState => {\r\n      if (searchItem === '') {\r\n        return;\r\n      } else if (\r\n        (prevState !== searchItem && searchItem !== '') ||\r\n        prevState !== page\r\n      ) {\r\n        searchImagesHandler();\r\n      }\r\n    },\r\n    // eslint-disable-next-line\r\n    [searchItem, page],\r\n  );\r\n\r\n  const closeModal = () => {\r\n    largeImgURL = '';\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const showImageHandler = imageUrl => () => {\r\n    largeImgURL = imageUrl;\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const scrollToHandler = () => {\r\n    const top = document.documentElement.scrollHeight - 150;\r\n\r\n    setTimeout(() => {\r\n      window.scrollTo({\r\n        top,\r\n        behavior: 'smooth',\r\n      });\r\n    }, 500);\r\n  };\r\n\r\n  const searchImagesHandler = async () => {\r\n    setIsLoading(true);\r\n    setError('');\r\n    try {\r\n      const result = await fetchImages(searchItem, page);\r\n\r\n      if (result.total !== 0) {\r\n        maxPages = Math.ceil(result.totalHits / 12);\r\n\r\n        setImages(prevState => [...prevState, ...result.hits]);\r\n      } else {\r\n        toast.info(`Nothing found for ${searchItem}!`);\r\n        setImages([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setError(error.toString());\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadMoreHandler = () => {\r\n    scrollToHandler();\r\n    setPage(Math.min(maxPages, page + 1));\r\n  };\r\n\r\n  const onSubmitHandler = searchString => {\r\n    maxPages = 0;\r\n    setImages([]);\r\n    setSearchItem(searchString);\r\n    setPage(1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Searchbar onSubmit={onSubmitHandler} />\r\n      {error ? (\r\n        <p className=\"ErrorText\">{error}</p>\r\n      ) : (\r\n        <ImageGallery\r\n          images={images}\r\n          showImageHandler={showImageHandler}\r\n          scrollToHandler={scrollToHandler}\r\n        />\r\n      )}\r\n      {isLoading && <Loader />}\r\n      {images.length > 0 && <Button loadMoreHandler={loadMoreHandler} />}\r\n      {openModal && (\r\n        <Modal largeImgURL={largeImgURL} onClose={closeModal}></Modal>\r\n      )}\r\n      <ToastContainer autoClose={2000} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}